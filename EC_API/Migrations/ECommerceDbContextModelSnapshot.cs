// <auto-generated />
using System;
using EC_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EC_API.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    partial class ECommerceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EC_API.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("EC_API.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.PrimitiveCollection<string>("Products")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("Pending");

                    b.Property<double>("TotalPrice")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EC_API.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "OMEN Gaming Laptop I9",
                            Name = "Laptop OEMN",
                            Price = 1200.99,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            Description = "HP Gaming Laptop I7",
                            Name = "Laptop HP",
                            Price = 999.99000000000001,
                            Stock = 9
                        },
                        new
                        {
                            Id = 3,
                            Description = "DELL Gaming Laptop I5",
                            Name = "Laptop DELL",
                            Price = 899.99000000000001,
                            Stock = 13
                        },
                        new
                        {
                            Id = 4,
                            Description = "APPLE Gaming Laptop MAC-AIR",
                            Name = "Laptop APPLE",
                            Price = 1599.99,
                            Stock = 12
                        },
                        new
                        {
                            Id = 5,
                            Description = "ASUS Gaming Laptop I9",
                            Name = "Laptop ASUS",
                            Price = 1300.99,
                            Stock = 11
                        },
                        new
                        {
                            Id = 6,
                            Description = "Smartphone Model I14",
                            Name = "Smartphone APPLE I14",
                            Price = 899.5,
                            Stock = 25
                        },
                        new
                        {
                            Id = 7,
                            Description = "Smartphone Model I15",
                            Name = "Smartphone APPLE I15",
                            Price = 899.5,
                            Stock = 35
                        },
                        new
                        {
                            Id = 8,
                            Description = "Smartphone Model I16",
                            Name = "Smartphone APPLE I16",
                            Price = 899.5,
                            Stock = 40
                        },
                        new
                        {
                            Id = 9,
                            Description = "Smartphone Model OPPO3",
                            Name = "Smartphone OPPO",
                            Price = 899.5,
                            Stock = 51
                        },
                        new
                        {
                            Id = 10,
                            Description = "Smartphone Model S23",
                            Name = "Smartphone SAMSUNG S23",
                            Price = 899.5,
                            Stock = 20
                        },
                        new
                        {
                            Id = 11,
                            Description = "Smartphone Model S24",
                            Name = "Smartphone SAMSUNG S24",
                            Price = 899.5,
                            Stock = 17
                        },
                        new
                        {
                            Id = 12,
                            Description = "Smartphone Model S25",
                            Name = "Smartphone SAMSUNG S25",
                            Price = 899.5,
                            Stock = 15
                        },
                        new
                        {
                            Id = 13,
                            Description = "Noise Cancelling Headphone Model APPLE",
                            Name = "Headphone APPLE",
                            Price = 199.99000000000001,
                            Stock = 55
                        },
                        new
                        {
                            Id = 14,
                            Description = "Noise Cancelling Headphone Model OPPO",
                            Name = "Headphone OPPO",
                            Price = 199.99000000000001,
                            Stock = 45
                        },
                        new
                        {
                            Id = 15,
                            Description = "Headphone Model SAMSUNG",
                            Name = "Headphone SAMSUNG",
                            Price = 199.99000000000001,
                            Stock = 30
                        });
                });

            modelBuilder.Entity("EC_API.Models.Order", b =>
                {
                    b.HasOne("EC_API.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });
#pragma warning restore 612, 618
        }
    }
}
